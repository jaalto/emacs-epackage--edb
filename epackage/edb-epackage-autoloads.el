(autoload 'make-skram                           "make-skram" "" nil)
(autoload 'edb--validate-schema                 "connection" "" nil)
(autoload 'edb--with-callable-connection        "connection" "" nil 'macro)
(autoload 'edb--connect                         "connection" "" nil)
(autoload 'edb--connection-file-cache           "connection" "" nil)
(autoload 'edb--1mm<-connection                 "connection" "" nil)
(autoload 'edb--1format-buffer<-connection      "connection" "" nil)
(autoload 'edb--1run-hooks                      "connection" "" nil)
(autoload 'edb--1run-hook-with-arg              "connection" "" nil)
(autoload 'edb-version                          "database" "" t)
(autoload 'edb-interact                         "database" "" t)
(autoload 'db-read-database-file                "db-file-io" "" nil)
(autoload 'db-read-database-internal-file-layout "db-file-io" "" nil)
(autoload 'db-locate-format-file                "db-file-io" "" nil)
(autoload 'db-choose-format-file                "db-file-io" "" nil)
(autoload 'db-read-database-file-helper         "db-file-io" "" nil)
(autoload 'edb--snap!                           "db-file-io" "" nil)
(autoload 'db-reading-noninternal               "db-file-io" "" nil 'macro)
(autoload 'db-read-file-custom                  "db-file-io" "" nil)
(autoload 'db-read-file-delimited               "db-file-io" "" nil)
(autoload 'db-read-file-delimstr                "db-file-io" "" nil)
(autoload 'db-read-file-delimrx                 "db-file-io" "" nil)
(autoload 'database-stored->actual              "db-file-io" "" nil)
(autoload 'db-write-1                           "db-file-io" "" nil)
(autoload 'db-write-intdelim                    "db-file-io" "" nil)
(autoload 'database-io-setup                    "db-file-io" "" nil)
(autoload 'db-jam-si                            "db-file-io" "" nil 'macro)
(autoload 'db-rfspec<-rftype                    "db-file-io" "" nil)
(autoload 'database-perform-substitutions       "db-file-io" "" nil)
(autoload 'db-conftup-bad-fsep                  "db-file-io" "" nil);;defsubst
(autoload 'db-conftup-bad-rsep                  "db-file-io" "" nil);;defsubst
(autoload 'db-conftup-reccount                  "db-file-io" "" nil);;defsubst
(autoload 'db-confirm-seps                      "db-file-io" "" nil)
(autoload 'database-acceptable-delimiter-p      "db-file-io" "" nil)
(autoload 'database-generate-delimiter          "db-file-io" "" nil)
(autoload 'dbf-this-field-name                  "db-format" "" nil);;defsubst
(autoload 'dbf-this-field-text                  "db-format" "" nil);;defsubst
(autoload 'dbf-set-this-field-text              "db-format" "" nil);;defsubst
(autoload 'dbf-this-field-modified-p            "db-format" "" nil);;defsubst
(autoload 'dbf-set-this-field-modified-p        "db-format" "" nil);;defsubst
(autoload 'dbf-set-this-record-modified-p       "db-format" "" nil);;defsubst
(autoload 'dbf-displayed-record                 "db-format" "" nil);;defsubst
(autoload 'dbf-set-change-function              "db-format" "" nil)
(autoload 'db-pad-left                          "db-format" "" nil)
(autoload 'db-pad-right                         "db-format" "" nil)
(autoload 'db-callconvert                       "db-format" "" nil)
(autoload 'db-unindentify                       "db-format" "" nil)
(autoload 'db-space-maybe-rx                    "db-format" "" nil)
(autoload 'db-view-mode                         "db-format" "" t)
(autoload 'db-edit-mode                         "db-format" "" nil)
(autoload 'db-parse-buffer-error                "db-format" "" nil)
(autoload 'db-next-line-or-field                "db-format" "" t)
(autoload 'db-move-to-field-exact               "db-format" "" nil)
(autoload 'db-next-field                        "db-format" "" t)
(autoload 'db-next-field-internal               "db-format" "" nil)
(autoload 'db-previous-line-or-field            "db-format" "" t)
(autoload 'db-previous-field                    "db-format" "" t)
(autoload 'db-previous-field-internal           "db-format" "" nil)
(autoload 'db-first-field-internal              "db-format" "" nil)
(autoload 'db-first-field                       "db-format" "" t)
(autoload 'db-last-field                        "db-format" "" t)
(autoload 'db-scroll-up                         "db-format" "" t)
(autoload 'db-scroll-down                       "db-format" "" t)
(autoload 'db-jump-to-point                     "db-format" "" nil)
(autoload 'dbf-this-field-end-pos               "db-format" "" nil);;defsubst
(autoload 'dbf-this-field-indent                "db-format" "" nil)
(autoload 'dbf-check-if-outside-field           "db-format" "" nil);;defsubst
(autoload 'db-beginning-of-field                "db-format" "" t);;defsubst
(autoload 'db-end-of-field                      "db-format" "" t);;defsubst
(autoload 'db-beginning-of-line-or-field        "db-format" "" t)
(autoload 'db-end-of-line-or-field              "db-format" "" t)
(autoload 'db-forward-char                      "db-format" "" t)
(autoload 'db-backward-char                     "db-format" "" t)
(autoload 'db-delete-char                       "db-format" "" t)
(autoload 'db-backward-delete-char              "db-format" "" t)
(autoload 'db-forward-word                      "db-format" "" t)
(autoload 'db-backward-word                     "db-format" "" t)
(autoload 'db-copy-region-as-kill               "db-format" "" t)
(autoload 'db-kill-region                       "db-format" "" t)
(autoload 'db-kill-word                         "db-format" "" t)
(autoload 'db-backward-kill-word                "db-format" "" t)
(autoload 'db-kill-line                         "db-format" "" t)
(autoload 'db-kill-to-end                       "db-format" "" t)
(autoload 'db-newline                           "db-format" "" t)
(autoload 'db-open-line                         "db-format" "" t)
(autoload 'dbf-process-field-maybe              "db-format" "" nil)
(autoload 'dbf-redisplay-entire-record-maybe    "db-format" "" nil)
(autoload 'dbf-process-current-record-maybe     "db-format" "" nil)
(autoload 'db-revert-field                      "db-format" "" t)
(autoload 'db-revert-record                     "db-format" "" t)
(autoload 'db-dspec<-dtype                      "db-format" "" nil)
(autoload 'db-dspec<-string                     "db-format" "" nil)
(autoload 'db-dspec<-type/opts                  "db-format" "" nil)
(autoload 'db-setup-data-display-buffer         "db-format" "" nil)
(autoload 'db-make-data-display-buffer          "db-format" "" nil)
(autoload 'db-setup-ddb-parse-displayspecs      "db-format" "" nil)
(autoload 'db-additional-data-display-buffer    "db-format" "" t)
(autoload 'db-change-format                     "db-format" "" t)
(autoload 'db-emergency-restore-format          "db-format" "" nil)
(autoload 'dbf-set-summary-format               "db-format" "" t)
(autoload 'dbf-always                           "db-format" "" nil 'macro)
(autoload 'db-display-record                    "db-format" "" nil)
(autoload 'db-ds-printed                        "db-format" "" nil)
(autoload 'database-mode                        "db-format" "" nil)
(autoload 'db-data-display-buffer-p             "db-format" "" nil);;defsubst
(autoload 'dbc-set-hide-p                       "db-interfa" "" nil)
(autoload 'db-set-field-help                    "db-interfa" "" nil)
(autoload 'db-field-help                        "db-interfa" "" t)
(autoload 'db-quit                              "db-interfa" "" t)
(autoload 'db-kill-buffer                       "db-interfa" "" t)
(autoload 'db-kill-all-buffers                  "db-interfa" "" t)
(autoload 'db-exit                              "db-interfa" "" t)
(autoload 'db-kill-buffer-hook                  "db-interfa" "" nil)
(autoload 'db-save-some-buffers                 "db-interfa" "" t)
(autoload 'db-save-some-databases               "db-interfa" "" t)
(autoload 'db-find-file                         "db-interfa" "" t)
(autoload 'db-find-read-in-database             "db-interfa" "" nil)
(autoload 'db-revert-database                   "db-interfa" "" t)
(autoload 'db-save-database                     "db-interfa" "" t)
(autoload 'db-write-database-file               "db-interfa" "" t)
(autoload 'db-toggle-internal-file-layout       "db-interfa" "" t)
(autoload 'db-toggle-modifiable-p               "db-interfa" "" t)
(autoload 'dbf-goto-record-internal             "db-interfa" "" nil 'macro)
(autoload 'db-jump-to-record                    "db-interfa" "" t)
(autoload 'db-first-record                      "db-interfa" "" t)
(autoload 'db-last-record                       "db-interfa" "" t)
(autoload 'db-next-record                       "db-interfa" "" t)
(autoload 'db-previous-record                   "db-interfa" "" t);;defsubst
(autoload 'db-next-record-ignore-hiding         "db-interfa" "" t);;defsubst
(autoload 'db-previous-record-ignore-hiding     "db-interfa" "" t);;defsubst
(autoload 'db-next-marked-record                "db-interfa" "" t);;defsubst
(autoload 'db-previous-marked-record            "db-interfa" "" t);;defsubst
(autoload 'dbc-set-index                        "db-interfa" "" nil)
(autoload 'db-select-next-record                "db-interfa" "" t)
(autoload 'db-select-first-record               "db-interfa" "" t)
(autoload 'db-select-record                     "db-interfa" "" t)
(autoload 'db-next-screen-or-record             "db-interfa" "" t)
(autoload 'dbf-next-screen-or-record            "db-interfa" "" nil)
(autoload 'db-previous-screen-or-record         "db-interfa" "" t)
(autoload 'dbf-previous-screen-or-record        "db-interfa" "" nil)
(autoload 'db-beginning-of-field-or-record      "db-interfa" "" t)
(autoload 'db-end-of-field-or-record            "db-interfa" "" t)
(autoload 'db-add-record                        "db-interfa" "" t)
(autoload 'db-delete-record                     "db-interfa" "" t)
(autoload 'db-yank-record                       "db-interfa" "" t)
(autoload 'db-copy-record                       "db-interfa" "" t)
(autoload 'db-output-record-to-db               "db-interfa" "" t)
(autoload 'db-sort                              "db-interfa" "" t)
(autoload 'dbf-finished-sorting                 "db-interfa" "" nil)
(autoload 'db-field-query-replace               "db-interfa" "" t)
(autoload 'db-accept-record                     "db-interfa" "" t)
(autoload 'db-search-field                      "db-interfa" "" t)
(autoload 'db-search                            "db-interfa" "" t)
(autoload 'db-isearch-forward                   "db-interfa" "" t)
(autoload 'db-isearch-backward                  "db-interfa" "" t)
(autoload 'db-mark-record                       "db-interfa" "" t)
(autoload 'db-hide-record                       "db-interfa" "" t)
(autoload 'db-mark-searched-records             "db-interfa" "" t)
(autoload 'db-hide-unmarked-records             "db-interfa" "" t)
(autoload 'db-mark-unhidden-records             "db-interfa" "" t)
(autoload 'db-unhide-all                        "db-interfa" "" t)
(autoload 'db-unmark-all                        "db-interfa" "" t)
(autoload 'db-hiding-toggle                     "db-interfa" "" t)
(autoload 'db-hiding-set                        "db-interfa" "" t)
(autoload 'db-toggle-show-hidden-records        "db-interfa" "" t)
(autoload 'db-report                            "db-interfa" "" t)
(autoload 'db-isbn-constraint                   "db-isbn" "" nil)
(autoload 'db-lucid-mouse-jump-to-point         "db-lemacs" "" t)
(autoload 'dbs-lucid-mouse-view                 "db-lemacs" "" t)
(autoload 'database-set-print-name              "db-nosetf" "" nil);;defsubst
(autoload 'database-set-fieldnames              "db-nosetf" "" nil);;defsubst
(autoload 'database-set-recordfieldspecs        "db-nosetf" "" nil);;defsubst
(autoload 'database-set-field-priorities        "db-nosetf" "" nil);;defsubst
(autoload 'database-set-read-record-from-region "db-nosetf" "" nil);;defsubst
(autoload 'database-set-write-region-from-record "db-nosetf" "" nil);;defsubst
(autoload 'database-set-sub-fieldsep-string     "db-nosetf" "" nil);;defsubst
(autoload 'database-set-sub-recordsep-string    "db-nosetf" "" nil);;defsubst
(autoload 'database-set-substitutions           "db-nosetf" "" nil);;defsubst
(autoload 'database-set-locals                  "db-nosetf" "" nil);;defsubst
(autoload 'sepinfo-set-pre-first-string         "db-nosetf" "" nil);;defsubst
(autoload 'sepinfo-set-pre-first-regexp         "db-nosetf" "" nil);;defsubst
(autoload 'sepinfo-set-pre-first-regexp-submatch "db-nosetf" "" nil);;defsubst
(autoload 'sepinfo-set-sep-string               "db-nosetf" "" nil);;defsubst
(autoload 'sepinfo-set-sep-regexp               "db-nosetf" "" nil);;defsubst
(autoload 'sepinfo-set-sep-regexp-submatch      "db-nosetf" "" nil);;defsubst
(autoload 'sepinfo-set-sep-function             "db-nosetf" "" nil);;defsubst
(autoload 'sepinfo-set-post-last-string         "db-nosetf" "" nil);;defsubst
(autoload 'sepinfo-set-post-last-regexp         "db-nosetf" "" nil);;defsubst
(autoload 'sepinfo-set-post-last-regexp-submatch "db-nosetf" "" nil);;defsubst
(autoload 'db-rdb-fspec-handle                  "db-rdb" "" nil);;defsubst
(autoload 'db-rdb-fspec-name                    "db-rdb" "" nil);;defsubst
(autoload 'db-rdb-fspec-type                    "db-rdb" "" nil);;defsubst
(autoload 'db-rdb-fspec-tag                     "db-rdb" "" nil);;defsubst
(autoload 'db-rdb-fspec-help                    "db-rdb" "" nil);;defsubst
(autoload 'db-rdb-setup                         "db-rdb" "" nil)
(autoload 'db-rdb-database-stored->actual       "db-rdb" "" nil)
(autoload 'db-rdb-list-rrfr                     "db-rdb" "" nil)
(autoload 'db-rdb-list-wrfr                     "db-rdb" "" nil)
(autoload 'db-rdb-read-fields                   "db-rdb" "" nil)
(autoload 'db-rdb-correlate-field-defs          "db-rdb" "" nil)
(autoload 'edb--1all-known-databases            "db-rep" "" nil)
(autoload 'database-set-modified-p              "db-rep" "" nil)
(autoload 'database-file                        "db-rep" "" nil)
(autoload 'database-data-display-buffers        "db-rep" "" nil)
(autoload 'database-no-of-records               "db-rep" "" nil)
(autoload 'db-rs-slice                          "db-rep" "" nil)
(autoload 'database-make-local                  "db-rep" "" nil)
(autoload 'database-set-local                   "db-rep" "" nil)
(autoload 'database-get-local                   "db-rep" "" nil)
(autoload 'database-local-p                     "db-rep" "" nil)
(autoload 'database-set-fieldnames-to-list      "db-rep" "" nil)
(autoload 'database-full-fieldsep-string        "db-rep" "" nil)
(autoload 'database-full-recordsep-string       "db-rep" "" nil)
(autoload 'db-rs-sortfunc                       "db-rep" "" nil)
(autoload 'db-rs-ordfunc                        "db-rep" "" nil)
(autoload 'db--mkrec                            "db-rep" "" nil)
(autoload 'db-make-record                       "db-rep" "" nil)
(autoload 'db-copy-r2r                          "db-rep" "" nil)
(autoload 'db-fname<-fno                        "db-rep" "" nil);;defsubst
(autoload 'db-record-field                      "db-rep" "" nil)
(autoload 'db-check-constraint                  "db-rep" "" nil)
(autoload 'db-record-set-field                  "db-rep" "" nil)
(autoload 'dbf-this-record-set-field            "db-rep" "" nil);;defsubst
(autoload 'dbf-displayed-record-field           "db-rep" "" nil);;defsubst
(autoload 'dbf-displayed-record-set-field       "db-rep" "" nil)
(autoload 'dbf-displayed-record-set-field-and-redisplay "db-rep" "" nil);;defsubst
(autoload 'db-make-n-line-sep-function          "db-rep" "" nil)
(autoload 'database-add-record                  "db-rep" "" nil)
(autoload 'db-lmap                              "db-rep" "" nil)
(autoload 'db-maprecords                        "db-rep" "" nil)
(autoload 'db-parse-match-pattern               "db-search" "" nil)
(autoload 'db-print-match-pattern               "db-search" "" nil)
(autoload 'db-match                             "db-search" "" nil)
(autoload 'database-sort                        "db-sort" "" nil)
(autoload 'db-convert-ordering-fields           "db-sort" "" nil)
(autoload 'db-make-ordering-fields-canonical    "db-sort" "" nil)
(autoload 'db-order-records                     "db-sort" "" nil)
(autoload 'db-record-lessp                      "db-sort" "" nil)
(autoload 'database-sorted-p                    "db-sort" "" nil)
(autoload 'database-ordered-p                   "db-sort" "" nil)
(autoload 'db-with-orderer                      "db-sort" "" nil 'macro)
(autoload 'db-with-sorter                       "db-sort" "" nil 'macro)
(autoload 'database-sort-interface              "db-sort" "" nil)
(autoload 'database-sort-interface-mode         "db-sort" "" nil)
(autoload 'dbsi-format                          "db-sort" "" nil)
(autoload 'dbsi-reformat                        "db-sort" "" nil)
(autoload 'dbsi-kill-line                       "db-sort" "" t)
(autoload 'dbsi-yank-line                       "db-sort" "" t)
(autoload 'dbsi-toggle-hidden-to-end            "db-sort" "" t)
(autoload 'dbsi-increasing                      "db-sort" "" t)
(autoload 'dbsi-decreasing                      "db-sort" "" t)
(autoload 'dbsi-ordering-function               "db-sort" "" t)
(autoload 'dbsi-sorting-function                "db-sort" "" t)
(autoload 'dbsi-quit                            "db-sort" "" t)
(autoload 'dbsi-quit-clear-buffer-default       "db-sort" "" t)
(autoload 'dbsi-this-field-only                 "db-sort" "" t)
(autoload 'dbsi-ordering<-buffer                "db-sort" "" nil)
(autoload 'dbsi-use-ordering-make-database-default "db-sort" "" t)
(autoload 'dbsi-use-ordering-make-buffer-default "db-sort" "" t)
(autoload 'dbsi-use-ordering                    "db-sort" "" t)
(autoload 'dbs-set-index                        "db-summary" "" nil)
(autoload 'db-in-data-display-buffer            "db-summary" "" nil 'macro)
(autoload 'db-summary                           "db-summary" "" t)
(autoload 'database-summary-mode                "db-summary" "" nil)
(autoload 'db-summary-buffer-p                  "db-summary" "" nil);;defsubst
(autoload 'db-summary-subset                    "db-summary" "" t)
(autoload 'dbs-insert-record-summary            "db-summary" "" nil)
(autoload 'dbf-fill-summary-buffer              "db-summary" "" nil)
(autoload 'dbf-update-summary-marks             "db-summary" "" nil)
(autoload 'dbf-update-summary-item              "db-summary" "" nil)
(autoload 'db-format->lines/sforms              "db-summary" "" nil)
(autoload 'dbs-in-synch-p                       "db-summary" "" nil);;defsubst
(autoload 'dbs-out-of-date-p                    "db-summary" "" nil);;defsubst
(autoload 'dbf-set-summary-out-of-date-p        "db-summary" "" nil);;defsubst
(autoload 'dbs-synch-format-with-summary        "db-summary" "" nil)
(autoload 'dbs-synch-summary-with-format        "db-summary" "" nil)
(autoload 'dbs-goto-nth-summary                 "db-summary" "" nil);;defsubst
(autoload 'dbs-move-to-proper-record            "db-summary" "" nil)
(autoload 'dbs-forward-record                   "db-summary" "" nil);;defsubst
(autoload 'dbs-next-record-ignore-hiding        "db-summary" "" t)
(autoload 'dbs-previous-record-ignore-hiding    "db-summary" "" t)
(autoload 'dbs-scroll-up                        "db-summary" "" t)
(autoload 'dbs-scroll-down                      "db-summary" "" t)
(autoload 'dbs-view                             "db-summary" "" t)
(autoload 'dbs-edit                             "db-summary" "" t)
(autoload 'dbs-quit                             "db-summary" "" t)
(autoload 'dbs-exit                             "db-summary" "" t)
(autoload 'dbs-delete-record                    "db-summary" "" t)
(autoload 'db-tagged-setup                      "db-tagged" "" nil)
(autoload 'db-tagged-convert/index              "db-tagged" "" nil)
(autoload 'db-tagged-read                       "db-tagged" "" nil)
(autoload 'db-tagged-write                      "db-tagged" "" nil)
(autoload 'db-process-two-databases             "db-two-dbs" "" nil)
(autoload 'db-merge                             "db-two-dbs" "" t)
(autoload 'db-merge-records                     "db-two-dbs" "" nil)
(autoload 'databases-compatible                 "db-two-dbs" "" nil)
(autoload 'database-compare-hack                "db-two-dbs" "" nil)
(autoload 'edb-define-displaytype               "db-types" "" nil)
(autoload 'edb-define-recordfieldtype           "db-types" "" nil)
(autoload 'edb-define-enumtype                  "db-types" "" nil)
(autoload 'db-number-order                      "db-types" "" nil);;defsubst
(autoload 'db-number-or-nil-order-nil-greatest  "db-types" "" nil)
(autoload 'db-number-or-nil-order-nil-least     "db-types" "" nil)
(autoload 'db-boolean->yes-no-string            "db-types" "" nil);;defsubst
(autoload 'db-yes-no-string->boolean            "db-types" "" nil)
(autoload 'db-boolean->yn-string                "db-types" "" nil);;defsubst
(autoload 'db-yn-string->boolean                "db-types" "" nil);;defsubst
(autoload 'db-boolean-order-function            "db-types" "" nil)
(autoload 'db-boolean-lessp                     "db-types" "" nil);;defsubst
(autoload 'db-string-lessp-ci                   "db-types" "" nil);;defsubst
(autoload 'db-string-order-ci                   "db-types" "" nil)
(autoload 'db-make-regexp-pattern               "db-types" "" nil)
(autoload 'db-regexp-pattern-regexp             "db-types" "" nil)
(autoload 'db-make-string-pattern               "db-types" "" nil)
(autoload 'db-string-pattern-regexp             "db-types" "" nil)
(autoload 'db-string-pattern-string             "db-types" "" nil)
(autoload 'db-string-match-function             "db-types" "" nil);;defsubst
(autoload 'db-string-match-display->actual      "db-types" "" nil)
(autoload 'db-string-match-actual->display      "db-types" "" nil)
(autoload 'db-string-or-nil->string             "db-types" "" nil);;defsubst
(autoload 'db-string-or-nil-lessp-ci            "db-types" "" nil);;defsubst
(autoload 'db-string-or-nil-order-ci            "db-types" "" nil);;defsubst
(autoload 'db-string-or-nil-match-function      "db-types" "" nil);;defsubst
(autoload 'db-string->nil-or-string             "db-types" "" nil);;defsubst
(autoload 'db-message                           "db-util" "" nil)
(autoload 'db-warning                           "db-util" "" nil 'macro)
(autoload 'db-unused-char-in-buffer             "db-util" "" nil)
(autoload 'db-unused-char-in-string             "db-util" "" nil)
(autoload 'db-skip-string-forward               "db-util" "" nil);;defsubst
(autoload 'db-skip-string-backward              "db-util" "" nil);;defsubst
(autoload 'db-skip-regexp-forward               "db-util" "" nil);;defsubst
(autoload 'db-looking-back-at                   "db-util" "" nil)
(autoload 'db-how-many-string-overlapping       "db-util" "" nil)
(autoload 'db-how-many-substring-overlapping    "db-util" "" nil)
(autoload 'db-find-char                         "db-util" "" nil)
(autoload 'db-find-char-from-end                "db-util" "" nil)
(autoload 'db-string-trim-whitespace            "db-util" "" nil);;defsubst
(autoload 'edb--G                               "db-util" "" nil)
(autoload 'edb--G!                              "db-util" "" nil)
(autoload 'edb--S                               "db-util" "" nil 'macro)
(autoload 'edb--S!                              "db-util" "" nil 'macro)
(autoload 'edb-get                              "db-util" "" nil)
(autoload 'edb-put                              "db-util" "" nil)
(autoload 'db-locate-readable-file-prefer-cwd   "db-util" "" nil)
(autoload 'db-same-file-p                       "db-util" "" nil)
(autoload 'db-string->integer-or-nil            "db-util" "" nil)
(autoload 'db-string->integer                   "db-util" "" nil)
(autoload 'db-number-or-nil->string             "db-util" "" nil)
(autoload 'db-in-buffer                         "db-util" "" nil 'macro)
(autoload 'db-copy-buffer-local-variables       "db-util" "" nil)
(autoload 'db-string-split-last-word            "db-util" "" nil)
(autoload 'db-string-split-first-word           "db-util" "" nil)
(autoload 'db-count-newlines                    "db-util" "" nil)
(autoload 'db-forward-line-wrapping             "db-util" "" t)
(autoload 'db-current-line                      "db-util" "" nil)
(autoload 'edb-true                             "db-util" "" nil)
(autoload 'edb-hookp                            "db-util" "" nil)
(autoload 'db-really-hack-local-variables       "db-util" "" nil)
(autoload 'edb-1int-to-single                   "edb-1int-to-single" "" t)
(autoload 'edb-meta                             "edb-meta" "" t)
(autoload 'edb-t-human-names:order-last-names   "edb-t-human-names" "" nil)
(autoload 'edb-t-human-names:canonicalize-name  "edb-t-human-names" "" nil)
(autoload 'edb-t-human-names:same-first-name-p  "edb-t-human-names" "" nil)
(autoload 'edb-t-human-names:order-first-names  "edb-t-human-names" "" nil)
(autoload 'edb-t-human-names:nicknamep          "edb-t-human-names" "" nil)
(autoload 'edb-t-human-names:standardize-name   "edb-t-human-names" "" nil)
(autoload 'edb-t-human-names:name->name-jr      "edb-t-human-names" "" nil)
(autoload 'edb-t-human-names:name->first-last-jr "edb-t-human-names" "" nil)
(autoload 'edb-t-places-usuk:postal-code-p      "edb-t-places-usuk" "" nil);;defsubst
(autoload 'edb-t-places-usuk:statep             "edb-t-places-usuk" "" nil)
(autoload 'edb-t-places-usuk:full-state-name    "edb-t-places-usuk" "" nil)
(autoload 'edb-t-places-usuk:abbreviate-state   "edb-t-places-usuk" "" nil)
(autoload 'edb-t-timedate1:make-date            "edb-t-timedate1" "" nil);;defsubst
(autoload 'edb-t-timedate1:date-year            "edb-t-timedate1" "" nil);;defsubst
(autoload 'edb-t-timedate1:date-month           "edb-t-timedate1" "" nil);;defsubst
(autoload 'edb-t-timedate1:date-day             "edb-t-timedate1" "" nil);;defsubst
(autoload 'edb-t-timedate1:make-empty-date      "edb-t-timedate1" "" nil);;defsubst
(autoload 'edb-t-timedate1:date-year-long       "edb-t-timedate1" "" nil)
(autoload 'edb-t-timedate1:date->day-of-year    "edb-t-timedate1" "" nil)
(autoload 'edb-t-timedate1:date->absolute-days  "edb-t-timedate1" "" nil)
(autoload 'edb-t-timedate1:date->weekday-index  "edb-t-timedate1" "" nil);;defsubst
(autoload 'edb-t-timedate1:date->weekday-name   "edb-t-timedate1" "" nil);;defsubst
(autoload 'edb-t-timedate1:date-order-absolute  "edb-t-timedate1" "" nil)
(autoload 'edb-t-timedate1:parse-date-string    "edb-t-timedate1" "" nil)
(autoload 'edb-t-timedate1:parse-date-string-or-nil "edb-t-timedate1" "" nil)
(autoload 'edb-t-timedate1:parse-date-default-function "edb-t-timedate1" "" nil)
(autoload 'edb-t-timedate1:format-date          "edb-t-timedate1" "" nil)
(autoload 'edb-t-timedate1:simple-format-date   "edb-t-timedate1" "" nil)
(autoload 'edb-t-timedate1:simple-format-date-or-nil "edb-t-timedate1" "" nil)
(autoload 'edb-t-timedate1:format-date-mmddyy   "edb-t-timedate1" "" nil)
(autoload 'edb-t-timedate1:format-date-ddmmyy   "edb-t-timedate1" "" nil)
(autoload 'edb-t-timedate1:format-date-yymmdd   "edb-t-timedate1" "" nil)
(autoload 'edb-t-timedate1:format-date-ddmmmyy  "edb-t-timedate1" "" nil)
(autoload 'edb-t-timedate1:format-date-yyyymmdd "edb-t-timedate1" "" nil)
(autoload 'edb-t-timedate1:format-date-full     "edb-t-timedate1" "" nil)
(autoload 'edb-t-timedate1:format-date-unix     "edb-t-timedate1" "" nil)
(autoload 'edb-t-timedate1:format-date-all      "edb-t-timedate1" "" nil)
(autoload 'edb-t-timedate1:format-date-dec      "edb-t-timedate1" "" nil)
(autoload 'edb-t-timedate1:format-date-europe   "edb-t-timedate1" "" nil)
(autoload 'edb-t-timedate1:format-date-iso      "edb-t-timedate1" "" nil)
(autoload 'edb-t-timedate1:date-match-function  "edb-t-timedate1" "" nil)
(autoload 'edb-t-timedate1:date-merge           "edb-t-timedate1" "" nil)
(autoload 'edb-t-timedate1:date->storage-string-mmddyyyy "edb-t-timedate1" "" nil)
(autoload 'edb-t-timedate1:storage-string-mmddyyyy->date "edb-t-timedate1" "" nil)
(autoload 'edb-t-timedate1:date->storage-string-lisp "edb-t-timedate1" "" nil)
(autoload 'edb-t-timedate1:storage-string-lisp->date "edb-t-timedate1" "" nil)
(autoload 'edb-t-timedate1:date-stored->actual  "edb-t-timedate1" "" nil)
(autoload 'edb-t-timedate1:make-time            "edb-t-timedate1" "" nil);;defsubst
(autoload 'edb-t-timedate1:time-hours           "edb-t-timedate1" "" nil);;defsubst
(autoload 'edb-t-timedate1:time-mins            "edb-t-timedate1" "" nil);;defsubst
(autoload 'edb-t-timedate1:time-secs            "edb-t-timedate1" "" nil);;defsubst
(autoload 'edb-t-timedate1:make-empty-time      "edb-t-timedate1" "" nil);;defsubst
(autoload 'edb-t-timedate1:empty-time-p         "edb-t-timedate1" "" nil)
(autoload 'edb-t-timedate1:time-default-constraint "edb-t-timedate1" "" nil)
(autoload 'edb-t-timedate1:parse-time-string    "edb-t-timedate1" "" nil)
(autoload 'edb-t-timedate1:parse-time-default-function "edb-t-timedate1" "" nil)
(autoload 'edb-t-timedate1:format-time-24       "edb-t-timedate1" "" nil)
(autoload 'edb-t-timedate1:format-time-12       "edb-t-timedate1" "" nil)
(autoload 'edb-t-timedate1:format-time-12-hhmm  "edb-t-timedate1" "" nil)
(autoload 'edb-t-timedate1:format-time-24-hhmm  "edb-t-timedate1" "" nil)
(autoload 'edb-t-timedate1:time-order           "edb-t-timedate1" "" nil)
(autoload 'edb-t-timedate1:time-match-function  "edb-t-timedate1" "" nil)
(autoload 'edb-t-timedate1:time->storage-string "edb-t-timedate1" "" nil)
(autoload 'edb-t-timedate1:storage-string->time "edb-t-timedate1" "" nil)
(autoload 'edb-t-timedate1:time-merge           "edb-t-timedate1" "" nil)
(autoload 'edb--arrrr!                          "edbcore" "" nil);;defsubst
(autoload 'edb--rinit                           "edbcore" "" nil)
(autoload 'edb--rget                            "edbcore" "" nil)
(autoload 'edb--rput                            "edbcore" "" nil)
(autoload 'edb--rforget                         "edbcore" "" nil)
(autoload 'edb--mputhash                        "edbcore" "" nil)
(autoload 'edb--hashcollect                     "edbcore" "" nil)
(autoload 'edb--define-child-hash               "edbcore" "" nil 'macro)
(autoload 'edb-tag                              "edbcore" "" nil)
(autoload 'edb-tagp                             "edbcore" "" nil)
(autoload 'edb-tagx                             "edbcore" "" nil)
(autoload 'edb-tag-                             "edbcore" "" nil)
(autoload 'edb--validate-schema                 "edbcore" "" nil)
(autoload 'edb--with-callable-connection        "edbcore" "" nil 'macro)
(autoload 'edb--connect                         "edbcore" "" nil)
(autoload 'edb--connection-file-cache           "edbcore" "" nil)
(autoload 'edb--1mm<-connection                 "edbcore" "" nil)
(autoload 'edb--1format-buffer<-connection      "edbcore" "" nil)
(autoload 'edb--1run-hooks                      "edbcore" "" nil)
(autoload 'edb--1run-hook-with-arg              "edbcore" "" nil)
(autoload 'db-message                           "edbcore" "" nil)
(autoload 'db-warning                           "edbcore" "" nil 'macro)
(autoload 'db-unused-char-in-buffer             "edbcore" "" nil)
(autoload 'db-unused-char-in-string             "edbcore" "" nil)
(autoload 'db-skip-string-forward               "edbcore" "" nil);;defsubst
(autoload 'db-skip-string-backward              "edbcore" "" nil);;defsubst
(autoload 'db-skip-regexp-forward               "edbcore" "" nil);;defsubst
(autoload 'db-looking-back-at                   "edbcore" "" nil)
(autoload 'db-how-many-string-overlapping       "edbcore" "" nil)
(autoload 'db-how-many-substring-overlapping    "edbcore" "" nil)
(autoload 'db-find-char                         "edbcore" "" nil)
(autoload 'db-find-char-from-end                "edbcore" "" nil)
(autoload 'db-string-trim-whitespace            "edbcore" "" nil);;defsubst
(autoload 'edb--G                               "edbcore" "" nil)
(autoload 'edb--G!                              "edbcore" "" nil)
(autoload 'edb--S                               "edbcore" "" nil 'macro)
(autoload 'edb--S!                              "edbcore" "" nil 'macro)
(autoload 'edb-get                              "edbcore" "" nil)
(autoload 'edb-put                              "edbcore" "" nil)
(autoload 'db-locate-readable-file-prefer-cwd   "edbcore" "" nil)
(autoload 'db-same-file-p                       "edbcore" "" nil)
(autoload 'db-string->integer-or-nil            "edbcore" "" nil)
(autoload 'db-string->integer                   "edbcore" "" nil)
(autoload 'db-number-or-nil->string             "edbcore" "" nil)
(autoload 'db-in-buffer                         "edbcore" "" nil 'macro)
(autoload 'db-copy-buffer-local-variables       "edbcore" "" nil)
(autoload 'db-string-split-last-word            "edbcore" "" nil)
(autoload 'db-string-split-first-word           "edbcore" "" nil)
(autoload 'db-count-newlines                    "edbcore" "" nil)
(autoload 'db-forward-line-wrapping             "edbcore" "" t)
(autoload 'db-current-line                      "edbcore" "" nil)
(autoload 'edb-true                             "edbcore" "" nil)
(autoload 'edb-hookp                            "edbcore" "" nil)
(autoload 'db-really-hack-local-variables       "edbcore" "" nil)
(autoload 'edb--1all-known-databases            "edbcore" "" nil)
(autoload 'database-set-modified-p              "edbcore" "" nil)
(autoload 'database-file                        "edbcore" "" nil)
(autoload 'database-data-display-buffers        "edbcore" "" nil)
(autoload 'database-no-of-records               "edbcore" "" nil)
(autoload 'db-rs-slice                          "edbcore" "" nil)
(autoload 'database-make-local                  "edbcore" "" nil)
(autoload 'database-set-local                   "edbcore" "" nil)
(autoload 'database-get-local                   "edbcore" "" nil)
(autoload 'database-local-p                     "edbcore" "" nil)
(autoload 'database-set-fieldnames-to-list      "edbcore" "" nil)
(autoload 'database-full-fieldsep-string        "edbcore" "" nil)
(autoload 'database-full-recordsep-string       "edbcore" "" nil)
(autoload 'db-rs-sortfunc                       "edbcore" "" nil)
(autoload 'db-rs-ordfunc                        "edbcore" "" nil)
(autoload 'db--mkrec                            "edbcore" "" nil)
(autoload 'db-make-record                       "edbcore" "" nil)
(autoload 'db-copy-r2r                          "edbcore" "" nil)
(autoload 'db-fname<-fno                        "edbcore" "" nil);;defsubst
(autoload 'db-record-field                      "edbcore" "" nil)
(autoload 'db-check-constraint                  "edbcore" "" nil)
(autoload 'db-record-set-field                  "edbcore" "" nil)
(autoload 'dbf-this-record-set-field            "edbcore" "" nil);;defsubst
(autoload 'dbf-displayed-record-field           "edbcore" "" nil);;defsubst
(autoload 'dbf-displayed-record-set-field       "edbcore" "" nil)
(autoload 'dbf-displayed-record-set-field-and-redisplay "edbcore" "" nil);;defsubst
(autoload 'db-make-n-line-sep-function          "edbcore" "" nil)
(autoload 'database-add-record                  "edbcore" "" nil)
(autoload 'db-lmap                              "edbcore" "" nil)
(autoload 'db-maprecords                        "edbcore" "" nil)
(autoload 'dbf-this-field-name                  "edbcore" "" nil);;defsubst
(autoload 'dbf-this-field-text                  "edbcore" "" nil);;defsubst
(autoload 'dbf-set-this-field-text              "edbcore" "" nil);;defsubst
(autoload 'dbf-this-field-modified-p            "edbcore" "" nil);;defsubst
(autoload 'dbf-set-this-field-modified-p        "edbcore" "" nil);;defsubst
(autoload 'dbf-set-this-record-modified-p       "edbcore" "" nil);;defsubst
(autoload 'dbf-displayed-record                 "edbcore" "" nil);;defsubst
(autoload 'dbf-set-change-function              "edbcore" "" nil)
(autoload 'db-pad-left                          "edbcore" "" nil)
(autoload 'db-pad-right                         "edbcore" "" nil)
(autoload 'db-callconvert                       "edbcore" "" nil)
(autoload 'db-unindentify                       "edbcore" "" nil)
(autoload 'db-space-maybe-rx                    "edbcore" "" nil)
(autoload 'db-view-mode                         "edbcore" "" t)
(autoload 'db-edit-mode                         "edbcore" "" nil)
(autoload 'db-parse-buffer-error                "edbcore" "" nil)
(autoload 'db-next-line-or-field                "edbcore" "" t)
(autoload 'db-move-to-field-exact               "edbcore" "" nil)
(autoload 'db-next-field                        "edbcore" "" t)
(autoload 'db-next-field-internal               "edbcore" "" nil)
(autoload 'db-previous-line-or-field            "edbcore" "" t)
(autoload 'db-previous-field                    "edbcore" "" t)
(autoload 'db-previous-field-internal           "edbcore" "" nil)
(autoload 'db-first-field-internal              "edbcore" "" nil)
(autoload 'db-first-field                       "edbcore" "" t)
(autoload 'db-last-field                        "edbcore" "" t)
(autoload 'db-scroll-up                         "edbcore" "" t)
(autoload 'db-scroll-down                       "edbcore" "" t)
(autoload 'db-jump-to-point                     "edbcore" "" nil)
(autoload 'dbf-this-field-end-pos               "edbcore" "" nil);;defsubst
(autoload 'dbf-this-field-indent                "edbcore" "" nil)
(autoload 'dbf-check-if-outside-field           "edbcore" "" nil);;defsubst
(autoload 'db-beginning-of-field                "edbcore" "" t);;defsubst
(autoload 'db-end-of-field                      "edbcore" "" t);;defsubst
(autoload 'db-beginning-of-line-or-field        "edbcore" "" t)
(autoload 'db-end-of-line-or-field              "edbcore" "" t)
(autoload 'db-forward-char                      "edbcore" "" t)
(autoload 'db-backward-char                     "edbcore" "" t)
(autoload 'db-delete-char                       "edbcore" "" t)
(autoload 'db-backward-delete-char              "edbcore" "" t)
(autoload 'db-forward-word                      "edbcore" "" t)
(autoload 'db-backward-word                     "edbcore" "" t)
(autoload 'db-copy-region-as-kill               "edbcore" "" t)
(autoload 'db-kill-region                       "edbcore" "" t)
(autoload 'db-kill-word                         "edbcore" "" t)
(autoload 'db-backward-kill-word                "edbcore" "" t)
(autoload 'db-kill-line                         "edbcore" "" t)
(autoload 'db-kill-to-end                       "edbcore" "" t)
(autoload 'db-newline                           "edbcore" "" t)
(autoload 'db-open-line                         "edbcore" "" t)
(autoload 'dbf-process-field-maybe              "edbcore" "" nil)
(autoload 'dbf-redisplay-entire-record-maybe    "edbcore" "" nil)
(autoload 'dbf-process-current-record-maybe     "edbcore" "" nil)
(autoload 'db-revert-field                      "edbcore" "" t)
(autoload 'db-revert-record                     "edbcore" "" t)
(autoload 'db-dspec<-dtype                      "edbcore" "" nil)
(autoload 'db-dspec<-string                     "edbcore" "" nil)
(autoload 'db-dspec<-type/opts                  "edbcore" "" nil)
(autoload 'db-setup-data-display-buffer         "edbcore" "" nil)
(autoload 'db-make-data-display-buffer          "edbcore" "" nil)
(autoload 'db-setup-ddb-parse-displayspecs      "edbcore" "" nil)
(autoload 'db-additional-data-display-buffer    "edbcore" "" t)
(autoload 'db-change-format                     "edbcore" "" t)
(autoload 'db-emergency-restore-format          "edbcore" "" nil)
(autoload 'dbf-set-summary-format               "edbcore" "" t)
(autoload 'dbf-always                           "edbcore" "" nil 'macro)
(autoload 'db-display-record                    "edbcore" "" nil)
(autoload 'db-ds-printed                        "edbcore" "" nil)
(autoload 'database-mode                        "edbcore" "" nil)
(autoload 'db-data-display-buffer-p             "edbcore" "" nil);;defsubst
(autoload 'db-read-database-file                "edbcore" "" nil)
(autoload 'db-read-database-internal-file-layout "edbcore" "" nil)
(autoload 'db-locate-format-file                "edbcore" "" nil)
(autoload 'db-choose-format-file                "edbcore" "" nil)
(autoload 'db-read-database-file-helper         "edbcore" "" nil)
(autoload 'edb--snap!                           "edbcore" "" nil)
(autoload 'db-reading-noninternal               "edbcore" "" nil 'macro)
(autoload 'db-read-file-custom                  "edbcore" "" nil)
(autoload 'db-read-file-delimited               "edbcore" "" nil)
(autoload 'db-read-file-delimstr                "edbcore" "" nil)
(autoload 'db-read-file-delimrx                 "edbcore" "" nil)
(autoload 'database-stored->actual              "edbcore" "" nil)
(autoload 'db-write-1                           "edbcore" "" nil)
(autoload 'db-write-intdelim                    "edbcore" "" nil)
(autoload 'database-io-setup                    "edbcore" "" nil)
(autoload 'db-jam-si                            "edbcore" "" nil 'macro)
(autoload 'db-rfspec<-rftype                    "edbcore" "" nil)
(autoload 'database-perform-substitutions       "edbcore" "" nil)
(autoload 'db-conftup-bad-fsep                  "edbcore" "" nil);;defsubst
(autoload 'db-conftup-bad-rsep                  "edbcore" "" nil);;defsubst
(autoload 'db-conftup-reccount                  "edbcore" "" nil);;defsubst
(autoload 'db-confirm-seps                      "edbcore" "" nil)
(autoload 'database-acceptable-delimiter-p      "edbcore" "" nil)
(autoload 'database-generate-delimiter          "edbcore" "" nil)
(autoload 'dbc-set-hide-p                       "edbcore" "" nil)
(autoload 'db-set-field-help                    "edbcore" "" nil)
(autoload 'db-field-help                        "edbcore" "" t)
(autoload 'db-quit                              "edbcore" "" t)
(autoload 'db-kill-buffer                       "edbcore" "" t)
(autoload 'db-kill-all-buffers                  "edbcore" "" t)
(autoload 'db-exit                              "edbcore" "" t)
(autoload 'db-kill-buffer-hook                  "edbcore" "" nil)
(autoload 'db-save-some-buffers                 "edbcore" "" t)
(autoload 'db-save-some-databases               "edbcore" "" t)
(autoload 'db-find-file                         "edbcore" "" t)
(autoload 'db-find-read-in-database             "edbcore" "" nil)
(autoload 'db-revert-database                   "edbcore" "" t)
(autoload 'db-save-database                     "edbcore" "" t)
(autoload 'db-write-database-file               "edbcore" "" t)
(autoload 'db-toggle-internal-file-layout       "edbcore" "" t)
(autoload 'db-toggle-modifiable-p               "edbcore" "" t)
(autoload 'dbf-goto-record-internal             "edbcore" "" nil 'macro)
(autoload 'db-jump-to-record                    "edbcore" "" t)
(autoload 'db-first-record                      "edbcore" "" t)
(autoload 'db-last-record                       "edbcore" "" t)
(autoload 'db-next-record                       "edbcore" "" t)
(autoload 'db-previous-record                   "edbcore" "" t);;defsubst
(autoload 'db-next-record-ignore-hiding         "edbcore" "" t);;defsubst
(autoload 'db-previous-record-ignore-hiding     "edbcore" "" t);;defsubst
(autoload 'db-next-marked-record                "edbcore" "" t);;defsubst
(autoload 'db-previous-marked-record            "edbcore" "" t);;defsubst
(autoload 'dbc-set-index                        "edbcore" "" nil)
(autoload 'db-select-next-record                "edbcore" "" t)
(autoload 'db-select-first-record               "edbcore" "" t)
(autoload 'db-select-record                     "edbcore" "" t)
(autoload 'db-next-screen-or-record             "edbcore" "" t)
(autoload 'dbf-next-screen-or-record            "edbcore" "" nil)
(autoload 'db-previous-screen-or-record         "edbcore" "" t)
(autoload 'dbf-previous-screen-or-record        "edbcore" "" nil)
(autoload 'db-beginning-of-field-or-record      "edbcore" "" t)
(autoload 'db-end-of-field-or-record            "edbcore" "" t)
(autoload 'db-add-record                        "edbcore" "" t)
(autoload 'db-delete-record                     "edbcore" "" t)
(autoload 'db-yank-record                       "edbcore" "" t)
(autoload 'db-copy-record                       "edbcore" "" t)
(autoload 'db-output-record-to-db               "edbcore" "" t)
(autoload 'db-sort                              "edbcore" "" t)
(autoload 'dbf-finished-sorting                 "edbcore" "" nil)
(autoload 'db-field-query-replace               "edbcore" "" t)
(autoload 'db-accept-record                     "edbcore" "" t)
(autoload 'db-search-field                      "edbcore" "" t)
(autoload 'db-search                            "edbcore" "" t)
(autoload 'db-isearch-forward                   "edbcore" "" t)
(autoload 'db-isearch-backward                  "edbcore" "" t)
(autoload 'db-mark-record                       "edbcore" "" t)
(autoload 'db-hide-record                       "edbcore" "" t)
(autoload 'db-mark-searched-records             "edbcore" "" t)
(autoload 'db-hide-unmarked-records             "edbcore" "" t)
(autoload 'db-mark-unhidden-records             "edbcore" "" t)
(autoload 'db-unhide-all                        "edbcore" "" t)
(autoload 'db-unmark-all                        "edbcore" "" t)
(autoload 'db-hiding-toggle                     "edbcore" "" t)
(autoload 'db-hiding-set                        "edbcore" "" t)
(autoload 'db-toggle-show-hidden-records        "edbcore" "" t)
(autoload 'db-report                            "edbcore" "" t)
(autoload 'edb-define-displaytype               "edbcore" "" nil)
(autoload 'edb-define-recordfieldtype           "edbcore" "" nil)
(autoload 'edb-define-enumtype                  "edbcore" "" nil)
(autoload 'db-number-order                      "edbcore" "" nil);;defsubst
(autoload 'db-number-or-nil-order-nil-greatest  "edbcore" "" nil)
(autoload 'db-number-or-nil-order-nil-least     "edbcore" "" nil)
(autoload 'db-boolean->yes-no-string            "edbcore" "" nil);;defsubst
(autoload 'db-yes-no-string->boolean            "edbcore" "" nil)
(autoload 'db-boolean->yn-string                "edbcore" "" nil);;defsubst
(autoload 'db-yn-string->boolean                "edbcore" "" nil);;defsubst
(autoload 'db-boolean-order-function            "edbcore" "" nil)
(autoload 'db-boolean-lessp                     "edbcore" "" nil);;defsubst
(autoload 'db-string-lessp-ci                   "edbcore" "" nil);;defsubst
(autoload 'db-string-order-ci                   "edbcore" "" nil)
(autoload 'db-make-regexp-pattern               "edbcore" "" nil)
(autoload 'db-regexp-pattern-regexp             "edbcore" "" nil)
(autoload 'db-make-string-pattern               "edbcore" "" nil)
(autoload 'db-string-pattern-regexp             "edbcore" "" nil)
(autoload 'db-string-pattern-string             "edbcore" "" nil)
(autoload 'db-string-match-function             "edbcore" "" nil);;defsubst
(autoload 'db-string-match-display->actual      "edbcore" "" nil)
(autoload 'db-string-match-actual->display      "edbcore" "" nil)
(autoload 'db-string-or-nil->string             "edbcore" "" nil);;defsubst
(autoload 'db-string-or-nil-lessp-ci            "edbcore" "" nil);;defsubst
(autoload 'db-string-or-nil-order-ci            "edbcore" "" nil);;defsubst
(autoload 'db-string-or-nil-match-function      "edbcore" "" nil);;defsubst
(autoload 'db-string->nil-or-string             "edbcore" "" nil);;defsubst
(autoload 'dbs-set-index                        "edbcore" "" nil)
(autoload 'db-in-data-display-buffer            "edbcore" "" nil 'macro)
(autoload 'db-summary                           "edbcore" "" t)
(autoload 'database-summary-mode                "edbcore" "" nil)
(autoload 'db-summary-buffer-p                  "edbcore" "" nil);;defsubst
(autoload 'db-summary-subset                    "edbcore" "" t)
(autoload 'dbs-insert-record-summary            "edbcore" "" nil)
(autoload 'dbf-fill-summary-buffer              "edbcore" "" nil)
(autoload 'dbf-update-summary-marks             "edbcore" "" nil)
(autoload 'dbf-update-summary-item              "edbcore" "" nil)
(autoload 'db-format->lines/sforms              "edbcore" "" nil)
(autoload 'dbs-in-synch-p                       "edbcore" "" nil);;defsubst
(autoload 'dbs-out-of-date-p                    "edbcore" "" nil);;defsubst
(autoload 'dbf-set-summary-out-of-date-p        "edbcore" "" nil);;defsubst
(autoload 'dbs-synch-format-with-summary        "edbcore" "" nil)
(autoload 'dbs-synch-summary-with-format        "edbcore" "" nil)
(autoload 'dbs-goto-nth-summary                 "edbcore" "" nil);;defsubst
(autoload 'dbs-move-to-proper-record            "edbcore" "" nil)
(autoload 'dbs-forward-record                   "edbcore" "" nil);;defsubst
(autoload 'dbs-next-record-ignore-hiding        "edbcore" "" t)
(autoload 'dbs-previous-record-ignore-hiding    "edbcore" "" t)
(autoload 'dbs-scroll-up                        "edbcore" "" t)
(autoload 'dbs-scroll-down                      "edbcore" "" t)
(autoload 'dbs-view                             "edbcore" "" t)
(autoload 'dbs-edit                             "edbcore" "" t)
(autoload 'dbs-quit                             "edbcore" "" t)
(autoload 'dbs-exit                             "edbcore" "" t)
(autoload 'dbs-delete-record                    "edbcore" "" t)
(autoload 'edb--arrrr!                          "state" "" nil);;defsubst
(autoload 'edb--rinit                           "state" "" nil)
(autoload 'edb--rget                            "state" "" nil)
(autoload 'edb--rput                            "state" "" nil)
(autoload 'edb--rforget                         "state" "" nil)
(autoload 'edb--mputhash                        "state" "" nil)
(autoload 'edb--hashcollect                     "state" "" nil)
(autoload 'edb--define-child-hash               "state" "" nil 'macro)
(autoload 'edb-tag                              "state" "" nil)
(autoload 'edb-tagp                             "state" "" nil)
(autoload 'edb-tagx                             "state" "" nil)
(autoload 'edb-tag-                             "state" "" nil)
(provide 'edb-epackage-autoloads)
